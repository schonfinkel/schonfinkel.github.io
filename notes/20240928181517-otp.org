:PROPERTIES:
:ID:       6ed3a191-0128-453e-b0b6-37c48593a6f0
:ROAM_ALIAS: "Open Telecom Platform"
:END:
#+title: OTP
#+filetags: [[roam:Erlang]]

#+BEGIN_QUOTE
OTP is a domain-independent set of frameworks, principles, and patterns that
guide and support the structure, design, implementation, and deployment of
[[id:de7d0e94-618f-4982-b3e5-8806d88cad5d][Erlang]] systems. Using OTP in your projects will help you avoid accidental
complexity: things that are difficult because you picked inadequate
tools. [cite:@cesarini2016designing p.20]
#+END_QUOTE

* Behaviors

#+begin_quote
Behaviours are a way of formalizing common patterns in process-oriented
programming. For example, the concept of a server is general and includes a
large portion of all processes you’ll ever need to write. All those processes
have a lot in common—in particular, whether they should be made to follow OTP
conventions for supervision and other things. (...)

Instead, an OTP behaviour takes such a recurring pattern and divides it into two
halves: the generic part and the application-specific implementation part. These
communicate via a simple, well-defined interface. [cite:@logan2010erlang p.97]
#+end_quote

** Components of a Behaviour
+ The interface
+ The implementation
+ The container

** Kinds

+ [[id:04a44951-985d-4b5b-bd52-f1893ea29ae7][OTP Application]]: Implements the ~application~ behaviours, which is a way to
  package related modules in Erlang.
+ [[id:1cd8fd81-a7c4-44ea-8b7a-d803e9b491af][Gen Server]]: 
+ [[id:2daf1307-afb4-49e4-98cb-66ac7eb27cf0][Supervisor]]: 
+ ~gen_statem~: State Machines
+ ~gen_fsm~: Finite State Machine
+ [[id:0372baa6-420e-483a-9621-7f80f1ad6974][Gen Event]]: 
